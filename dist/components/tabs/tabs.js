import clsx from"clsx";import React from"react";import{useFocusRing}from"react-aria";import{Text}from"../Text/index";import styles from"./tabs.module.css";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}var Tabs=function(param){var tabs=param.tabs,selected=param.selected,setSelected=param.setSelected,disabled=param.disabled;return React.createElement("div",{className:clsx("geist-no-scrollbar",styles.tabs),"data-geist-tabs":""},tabs.map(function(tab){return React.createElement(Tab,{key:tab.value,title:tab.title,value:tab.value,selected:selected,setSelected:setSelected,icon:tab.icon,disabled:disabled})}))};export default Tabs;var Tab=function(param){var title=param.title,value=param.value,selected=param.selected,setSelected=param.setSelected,icon=param.icon,disabled=param.disabled;var ref=useFocusRing(),focusProps=ref.focusProps,isFocusVisible=ref.isFocusVisible;return React.createElement("div",_extends({"aria-disabled":disabled},focusProps,{className:clsx(styles.tabContainer,{"focus-visible":isFocusVisible}),"data-geist-tab":"","data-focus-visible-added":isFocusVisible,role:"button",tabIndex:0,onClick:function(){if(!disabled)setSelected===null||setSelected===void 0?void 0:setSelected(value)},onKeyDown:function(e){if(e.key===" "&&!disabled){e.preventDefault();setSelected===null||setSelected===void 0?void 0:setSelected(value)}}}),React.createElement("div",{className:clsx(styles.tab,_defineProperty({},styles.activeTab,selected==value))},icon?React.createElement("div",{className:styles.tabIcon},icon):null,React.createElement(Text,null,title)))}