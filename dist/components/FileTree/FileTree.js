import clsx from"clsx";import React from"react";import{memo,useState}from"react";import{File as FileIcon,Folder as FolderIcon,FileLambda as LambdaIcon,MinusSquare as MinusIcon,PlusSquare as PlusIcon}from"../../icons/index";import{DepthContextProvider,useDepth}from"./DepthContext";import styles from"./file-tree.module.css";function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol!=="undefined"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i==null)return;var _arr=[];var _n=true;var _d=false;var _s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null)_i["return"]()}finally{if(_d)throw _e}}return _arr}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}export var Tree=function(param){var children=param.children,style=param.style;return React.createElement("div",{className:styles.tree,style:style},children)};export var Folder=memo(function(param){var children=param.children,name=param.name,open=param.open,style=param.style,_defaultOpen=param.defaultOpen,defaultOpen=_defaultOpen===void 0?false:_defaultOpen;var depth=useDepth();var ref=_slicedToArray(useState(defaultOpen),2),isOpen=ref[0],setIsOpen=ref[1];return React.createElement(DepthContextProvider,{value:1+depth},React.createElement("li",{className:clsx(styles.folder,{open:isOpen||open})},React.createElement("a",{title:name,onClick:function(){return setIsOpen(function(s){return!s})},style:style},Array.from(Array(depth)).map(function(_e,i){return React.createElement("span",{key:i,"data-tree-indent":""})}),React.createElement("span",{className:styles.status},open||isOpen?React.createElement(MinusIcon,{size:12}):React.createElement(PlusIcon,{size:12})),React.createElement("span",{className:styles.icon},React.createElement(FolderIcon,{size:22})),React.createElement("span",{className:styles.name},name)),(open||isOpen)&&React.createElement("ul",null,children)))});export var File=memo(function(param){var name=param.name,style=param.style,active=param.active,type=param.type;var depth=useDepth();return React.createElement("li",{className:clsx(styles.file,_defineProperty({},styles.active,active))},React.createElement("a",{style:style},Array.from(Array(depth)).map(function(_e,i){return React.createElement("span",{key:i,"data-tree-indent":""})}),React.createElement("span",{className:styles.icon},type==="lambda"?React.createElement(LambdaIcon,{size:22}):React.createElement(FileIcon,{size:22})),React.createElement("span",{className:styles.name},name)))})