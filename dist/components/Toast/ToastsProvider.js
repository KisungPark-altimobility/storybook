import React from"react";import{createContext,useState}from"react";function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}function _iterableToArray(iter){if(typeof Symbol!=="undefined"&&iter[Symbol.iterator]!=null||iter["@@iterator"]!=null)return Array.from(iter)}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol!=="undefined"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i==null)return;var _arr=[];var _n=true;var _d=false;var _s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null)_i["return"]()}finally{if(_d)throw _e}}return _arr}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableSpread()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}var throwerFn=function(){throw new Error("Missing a ToastsProvider")};export var ToastsContext=createContext({current:{messages:[],message:throwerFn,error:throwerFn,success:throwerFn,removeToastByKey:throwerFn}});var ToastsProvider=function(param){var children=param.children;var ref1=_slicedToArray(useState([]),2),messages=ref1[0],setMessages=ref1[1];var message=function(toast){var text,preserve,action,cancelAction;if(typeof toast==="string"){text=toast}else{var ref;ref=toast,text=ref.text,preserve=ref.preserve,action=ref.action,cancelAction=ref.cancelAction,ref}setMessages(function(prev){return _toConsumableArray(prev).concat([{text:text,preserve:preserve,height:action||cancelAction?72:64,key:(+new Date()).toString(),action:action,cancelAction:cancelAction},])})};var error=function(toast){var text,preserve,action,cancelAction;if(typeof toast==="string"){text=toast}else{var ref;ref=toast,text=ref.text,preserve=ref.preserve,action=ref.action,cancelAction=ref.cancelAction,ref}setMessages(function(prev){return _toConsumableArray(prev).concat([{text:text,preserve:preserve,height:action||cancelAction?72:64,key:(+new Date()).toString(),action:action,cancelAction:cancelAction,type:"error"},])})};var success=function(toast){var text,preserve,action,cancelAction;if(typeof toast==="string"){text=toast}else{var ref;ref=toast,text=ref.text,preserve=ref.preserve,action=ref.action,cancelAction=ref.cancelAction,ref}setMessages(function(prev){return _toConsumableArray(prev).concat([{text:text,preserve:preserve,height:action||cancelAction?72:64,key:(+new Date()).toString(),action:action,cancelAction:cancelAction,type:"success"},])})};var removeToastByKey=function(key){setMessages(function(prev){return prev.filter(function(p){return p.key!==key})})};return React.createElement(ToastsContext.Provider,{value:{current:{messages:messages,message:message,error:error,success:success,removeToastByKey:removeToastByKey}}},children)};export default ToastsProvider